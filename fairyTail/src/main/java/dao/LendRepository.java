package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;

import dao.mappers.IMapResultSetIntoEntity;
import dao.uow.IUnitOfWork;
import domain.model.Lend;

public class LendRepository extends BaseRepository<Lend>{

	protected LendRepository(Connection connection, IMapResultSetIntoEntity<Lend> mapper,IUnitOfWork uow) {
		super(connection, mapper,uow);
		
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO lend(BOOK_ID,READER_ID,dateOfLend,dateOfRegive) VALUES (?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE lend SET (BOOK_ID,READER_ID,dateOfLend,dateOfRegive)=(?,?,?,?) WHERE id=?";
	}

	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE lend("
				+"id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+"BOOK_ID int," + "READER_ID int," + "dateOfLend DATE," + "dateOfRegive DATE," 
				+ "FOREIGN KEY (READER_ID) REFERENCES reader(id)" + "FOREIGN KEY (BOOK_ID) REFERENCES book(id)" + ")";
	}

	@Override
	protected String tableName() {
		return "lend";
	}

	@Override
	protected void setUpdate(Lend entity) throws SQLException {
          update.setObject(1, entity.getBook());
          update.setObject(2, entity.getReader());
          update.setDate(3, (Date) entity.getDateOfLend());
          update.setDate(4, (Date)entity.getDateOfRegive());
	}

	@Override
	protected void setInsert(Lend entity) throws SQLException {
		 insert.setObject(1, entity.getBook());
         insert.setObject(2, entity.getReader());
         insert.setDate(3, (Date) entity.getDateOfLend());
         insert.setDate(4, (Date)entity.getDateOfRegive());
		
	}

	
}
