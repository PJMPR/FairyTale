package dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IBookRepository;
import dao.uow.Entity;
import dao.uow.IUnitOfWork;
import domain.model.Book;
import domain.model.Category;

public class BookRepository extends BaseRepository<Book> implements IBookRepository{
	
	
	
	public BookRepository(Connection connection,IMapResultSetIntoEntity<Book> mapper, IUnitOfWork uow) {
		super(connection, mapper,uow);
		
	}
	
	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE book("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," + "author varchar(50)"  
				+ "dateOfReleased DATE," + "publisher varchar(15),"
				+ "pageCount int"+")";
	}

	@Override
	protected String tableName() {
		return "book";
	}

	@Override
	protected String insertSql() {
		return "INSERT INTO book(name, author,dateOfReleased,publisher,pageCount) VALUES (?,?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE book SET(name, author,dateOfReleased,publisher,pageCount)=(?,?,?,?,?) WHERE id=?";
	}

	@Override
	protected void setUpdate(Book entity) throws SQLException {
		update.setString(1, entity.getName());
		update.setString(2, entity.getAuthor());
		update.setDate(2, entity.getDateOfReleased());
		update.setString(2, entity.getPublisher());
		update.setInt(2, entity.getPageCount());
		
	}

	@Override
	protected void setInsert(Book entity) throws SQLException {
		insert.setString(1, entity.getName());
		insert.setString(2, entity.getAuthor());
		insert.setDate(2, entity.getDateOfReleased());
		insert.setString(2, entity.getPublisher());
		insert.setInt(2, entity.getPageCount());
		
	}

	public List<Book> author(String author) {
		// TODO Auto-generated method stub
		return null;
	}

	public List<Book> category(Category category) {
		// TODO Auto-generated method stub
		return null;
	}	
}
